{
  "id": "EXNsEmrulVJ3peJv",
  "name": "Aelieve App | Email Recieving",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "13646fb3-9614-456c-a25d-fe62e060de04",
        "options": {}
      },
      "id": "832e1e01-f41a-4b18-af47-7edd9e0fd211",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        1400,
        520
      ],
      "webhookId": "13646fb3-9614-456c-a25d-fe62e060de04"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Emails",
          "mode": "list",
          "cachedResultName": "Inbox_Emails"
        },
        "limit": 1,
        "sort": {
          "values": [
            {
              "column": "id",
              "direction": "DESC"
            }
          ]
        },
        "options": {}
      },
      "id": "21855adb-ba50-4d54-a9f4-015e21df71af",
      "name": "Select Last Email by ID",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2240,
        340
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Emails",
          "mode": "list",
          "cachedResultName": "Inbox_Emails"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "sender": "={{ $json.body.Sender }}",
            "recipient": "={{ $json.body.Recipient }}",
            "date": "={{ $json.body.Date }}",
            "from": "={{ $json.body.From }}",
            "subject": "={{ $json.body.Subject }}",
            "headers": "={{ $json.body.Headers }}",
            "html-part": "={{ $json.body[\"Html-part\"] }}",
            "spamassassinScore": "={{ $json.body.SpamAssassinScore }}",
            "customid": "={{ $json.body.CustomID }}",
            "text-part": "={{ $json.cleanedMessage }}",
            "id": "={{ $json.id + 1}}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "sender",
              "displayName": "sender",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "recipient",
              "displayName": "recipient",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "from",
              "displayName": "from",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subject",
              "displayName": "subject",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers",
              "displayName": "headers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "text-part",
              "displayName": "text-part",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "html-part",
              "displayName": "html-part",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "spamassassinScore",
              "displayName": "spamassassinScore",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "customid",
              "displayName": "customid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "payload",
              "displayName": "payload",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "8d12149f-fd4d-4ef6-995e-55b2d887c274",
      "name": "Insert into Display_Items.Inbox_Emails",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2680,
        340
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "017e0d9d-4346-4c28-a82d-6bed2c0ee8b1",
              "name": "headers",
              "value": "={{ $('Is Microsoft').item.json.headers }}",
              "type": "object"
            },
            {
              "id": "221624b3-fe6d-4df1-b20b-3af0bb1a736e",
              "name": "body",
              "value": "={{ $('Is Microsoft').item.json.body }}",
              "type": "object"
            },
            {
              "id": "73de4ed4-f17f-4c39-b227-951efd22d070",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "number"
            },
            {
              "id": "e7ab8210-2c13-48ef-b038-2266c65e951b",
              "name": "cleanedMessage",
              "value": "={{ $('Clean All HTML').item.json.cleanedMessage }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3cf64e58-8d65-4c9d-851e-08dcc89df7d3",
      "name": "Combine for insert",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2460,
        340
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Emails",
          "mode": "list",
          "cachedResultName": "Inbox_Emails"
        },
        "limit": 1,
        "sort": {
          "values": [
            {
              "column": "id",
              "direction": "DESC"
            }
          ]
        },
        "options": {}
      },
      "id": "eb71243d-b04e-4445-90f5-cb8fce146cdd",
      "name": "Select Last Email by ID1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2380,
        600
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get input data from the previous node\nconst inputData = items[0].json.body['Html-part'];\n\n// Check if the signature exists in the HTML\nconst signatureIndex = inputData.indexOf('<div id=\"Signature\">');\n\n// If signature exists, trim everything after it including the signature itself\nconst outputData = signatureIndex !== -1 ? inputData.substring(0, signatureIndex) : inputData;\n\n// Return the modified string in a new item\nreturn [{json: {modifiedHtmlPart: outputData}}];\n"
      },
      "id": "492c9e31-bea5-4733-8d1d-c644bac0519d",
      "name": "Remove Email Sig",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1800,
        360
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get input data from the previous node\nconst inputData = items[0].json.body['Html-part'];\n\n// Check if the signature exists in the HTML\nconst signatureIndex = inputData.indexOf('<span class=\"gmail_signature_prefix\">');\n\n// If signature exists, trim everything after it including the signature itself\nconst outputData = signatureIndex !== -1 ? inputData.substring(0, signatureIndex) : inputData;\n\n// Return the modified string in a new item\nreturn [{json: {modifiedHtmlPart: outputData}}];"
      },
      "id": "fbe16f87-9702-4e16-bd26-3323fd864388",
      "name": "Remove Email Sig1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1980,
        600
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get input data from the previous node\nconst inputData = items[0].json.modifiedHtmlPart;\n\n// Remove all script and style elements\nlet outputData = inputData.replace(/<script[^>]*>([\\S\\s]*?)<\\/script>/gmi, '');\noutputData = outputData.replace(/<style[^>]*>([\\S\\s]*?)<\\/style>/gmi, '');\n\n// Use regex to remove all remaining HTML tags from the string\noutputData = outputData.replace(/<[^>]+>/g, '');\n\n// Normalize whitespace and split by newlines, then filter out empty lines\nconst lines = outputData.split('\\n').map(line => line.trim()).filter(line => line !== '');\n\n// Join back with single space to form the cleaned message body\nconst cleanedMessage = lines.join(' ');\n\n// Return the cleaned message body in a new item\nreturn [{json: {cleanedMessage: cleanedMessage}}];\n"
      },
      "id": "49146bcd-804f-4ef2-8758-a315c4149acc",
      "name": "Clean All HTML",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2020,
        340
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get input data from the previous node\nconst inputData = items[0].json.modifiedHtmlPart;\n\n// Remove all script and style elements\nlet outputData = inputData.replace(/<script[^>]*>([\\S\\s]*?)<\\/script>/gmi, '');\noutputData = outputData.replace(/<style[^>]*>([\\S\\s]*?)<\\/style>/gmi, '');\n\noutputData = outputData.replace(/<blockquote[^>]*>([\\S\\s]*?)<div dir=[^>]*>[^>]*/gmi, '');\n// Use regex to remove all remaining HTML tags from the string\noutputData = outputData.replace(/<[^>]+>/g, '');\n\n// Remove email quotation lines that might follow specific patterns\noutputData = outputData.replace(/On .* wrote:/g, '');\n\n\n// Normalize whitespace and split by newlines, then filter out empty lines\nconst lines = outputData.split('\\n').map(line => line.trim()).filter(line => line !== '');\n\n// Join back with single space to form the cleaned message body\nconst cleanedMessage = lines.join(' ');\n\n// Return the cleaned message body in a new item\nreturn [{json: {cleanedMessage: cleanedMessage}}];\n"
      },
      "id": "bad82ea8-ba69-4f76-9f63-3e85064ac95a",
      "name": "Clean All HTML1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2160,
        600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "546b83d3-23ae-454e-b599-cb7beff24043",
              "leftValue": "={{ $json.body.Headers[\"x-ms-publictraffictype\"] }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "61f8f81f-2d48-4db9-8da8-e7429a06548e",
      "name": "Is Microsoft",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1620,
        520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "18f1c920-f725-48b8-8f59-e03eb1fff258",
              "leftValue": "={{ $json.body.Headers[\"X-Google-DKIM-Signatur\"] }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fe5863b0-bda9-4a95-b567-df1593d8b59b",
      "name": "Is Google",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1780,
        700
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "017e0d9d-4346-4c28-a82d-6bed2c0ee8b1",
              "name": "headers",
              "value": "={{ $('Is Google').item.json.headers }}",
              "type": "object"
            },
            {
              "id": "221624b3-fe6d-4df1-b20b-3af0bb1a736e",
              "name": "body",
              "value": "={{ $('Is Google').item.json.body }}",
              "type": "object"
            },
            {
              "id": "73de4ed4-f17f-4c39-b227-951efd22d070",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "number"
            },
            {
              "id": "e7ab8210-2c13-48ef-b038-2266c65e951b",
              "name": "cleanedMessage",
              "value": "={{ $('Clean All HTML1').item.json.cleanedMessage }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "00bc08e9-f08b-4f65-8dbe-8c6e26d9fde4",
      "name": "Combine for insert1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2600,
        600
      ]
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Emails",
          "mode": "list",
          "cachedResultName": "Inbox_Emails"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "sender": "={{ $json.body.Sender }}",
            "recipient": "={{ $json.body.Recipient }}",
            "date": "={{ $json.body.Date }}",
            "from": "={{ $json.body.From }}",
            "subject": "={{ $json.body.Subject }}",
            "headers": "={{ $json.body.Headers }}",
            "html-part": "={{ $json.body[\"Html-part\"] }}",
            "spamassassinScore": "={{ $json.body.SpamAssassinScore }}",
            "customid": "={{ $json.body.CustomID }}",
            "text-part": "={{ $json.cleanedMessage }}",
            "id": "={{ $json.id + 1}}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "sender",
              "displayName": "sender",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "recipient",
              "displayName": "recipient",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "from",
              "displayName": "from",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subject",
              "displayName": "subject",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers",
              "displayName": "headers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "text-part",
              "displayName": "text-part",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "html-part",
              "displayName": "html-part",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "spamassassinScore",
              "displayName": "spamassassinScore",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "customid",
              "displayName": "customid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "payload",
              "displayName": "payload",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "01b9192c-316e-4b78-be79-89ac915547c8",
      "name": "Insert into Display_Items.Inbox_Emails1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2800,
        600
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    c.id AS contact_id, \n    c.contact_name, \n    c.first_name, \n    c.last_name\nFROM \n    display_items.\"CRM_Contacts\" c\nJOIN \n    relations.\"REL_ContactEmails\" r ON c.id = r.contact_id\nJOIN \n    display_items.\"CRM_Contact_Emails\" e ON r.email_id = e.id\nWHERE \n    e.email_address = '{{ $input.item.json.sender }}';\n",
        "options": {}
      },
      "id": "7ad3e0ee-ffcf-4583-8cca-cf83df63a246",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3020,
        600
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "relations",
          "mode": "list",
          "cachedResultName": "relations"
        },
        "table": {
          "__rl": true,
          "value": "REL_EmailContact",
          "mode": "list",
          "cachedResultName": "REL_EmailContact"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "contact_id": "={{ $json.contact_id }}",
            "email_id": "={{ $('Insert into Display_Items.Inbox_Emails1').item.json.id }}",
            "id": "={{ $('Insert into Display_Items.Inbox_Emails1').item.json.id  + '.' + $json.contact_id}}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "email_id",
              "displayName": "email_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "e0284402-214d-4f45-9c50-9df7f9395e18",
      "name": "Create REL Record1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3240,
        600
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "relations",
          "mode": "list",
          "cachedResultName": "relations"
        },
        "table": {
          "__rl": true,
          "value": "REL_EmailContact",
          "mode": "list",
          "cachedResultName": "REL_EmailContact"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "contact_id": "={{ $json.contact_id }}",
            "email_id": "={{ $('Insert into Display_Items.Inbox_Emails').item.json.id }}",
            "id": "={{ $('Insert into Display_Items.Inbox_Emails').item.json.id  + '.' + $json.contact_id}}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "email_id",
              "displayName": "email_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "f07b79e7-9fac-4afe-b915-e938e1b78e29",
      "name": "Create REL Record",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3180,
        340
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    c.id AS contact_id, \n    c.contact_name, \n    c.first_name, \n    c.last_name\nFROM \n    display_items.\"CRM_Contacts\" c\nJOIN \n    relations.\"REL_ContactEmails\" r ON c.id = r.contact_id\nJOIN \n    display_items.\"CRM_Contact_Emails\" e ON r.email_id = e.id\nWHERE \n    e.email_address = '{{ $input.item.json.sender }}';\n",
        "options": {}
      },
      "id": "5f770053-5193-4616-899b-ba1cbaa8ac80",
      "name": "Find Contact who sent email",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2960,
        340
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "noreply@aelieve.app",
        "toEmail": "={{ $json.body.Sender }}",
        "subject": "Aelieve Ticket Rejected",
        "text": "=The ticket:  {{ $json.body.Subject }}, has been rejected by our email system. \n\nPlease email: andrew@aelieve.it if you believe this is an error",
        "additionalFields": {}
      },
      "id": "f11c16a9-db15-47f8-abc5-3cd0a585cfbe",
      "name": "Mailjet",
      "type": "n8n-nodes-base.mailjet",
      "typeVersion": 1,
      "position": [
        1920,
        900
      ],
      "credentials": {
        "mailjetEmailApi": {
          "id": "FK9kSrYM2H7nhvWb",
          "name": "Mailjet Email account"
        }
      }
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Is Microsoft",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select Last Email by ID": {
      "main": [
        [
          {
            "node": "Combine for insert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine for insert": {
      "main": [
        [
          {
            "node": "Insert into Display_Items.Inbox_Emails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Email Sig": {
      "main": [
        [
          {
            "node": "Clean All HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Email Sig1": {
      "main": [
        [
          {
            "node": "Clean All HTML1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean All HTML": {
      "main": [
        [
          {
            "node": "Select Last Email by ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean All HTML1": {
      "main": [
        [
          {
            "node": "Select Last Email by ID1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Microsoft": {
      "main": [
        [
          {
            "node": "Remove Email Sig",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Is Google",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Google": {
      "main": [
        [
          {
            "node": "Remove Email Sig1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mailjet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select Last Email by ID1": {
      "main": [
        [
          {
            "node": "Combine for insert1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine for insert1": {
      "main": [
        [
          {
            "node": "Insert into Display_Items.Inbox_Emails1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert into Display_Items.Inbox_Emails1": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Create REL Record1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert into Display_Items.Inbox_Emails": {
      "main": [
        [
          {
            "node": "Find Contact who sent email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Contact who sent email": {
      "main": [
        [
          {
            "node": "Create REL Record",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Chicago",
    "saveManualExecutions": true,
    "callerPolicy": "any"
  },
  "triggerCount": 1,
  "versionId": "01e9512a-39fa-4437-b5b6-950b6f8c9f6f",
  "owner": "andrew@aelieve.it"
}