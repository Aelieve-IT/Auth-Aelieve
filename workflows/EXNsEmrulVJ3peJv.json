{
  "id": "EXNsEmrulVJ3peJv",
  "name": "Aelieve App | Email Recieving",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "13646fb3-9614-456c-a25d-fe62e060de04",
        "options": {}
      },
      "id": "832e1e01-f41a-4b18-af47-7edd9e0fd211",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        1400,
        520
      ],
      "webhookId": "13646fb3-9614-456c-a25d-fe62e060de04"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Emails",
          "mode": "list",
          "cachedResultName": "Inbox_Emails"
        },
        "limit": 1,
        "sort": {
          "values": [
            {
              "column": "id",
              "direction": "DESC"
            }
          ]
        },
        "options": {}
      },
      "id": "21855adb-ba50-4d54-a9f4-015e21df71af",
      "name": "Select Last Email by ID",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2240,
        360
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Emails",
          "mode": "list",
          "cachedResultName": "Inbox_Emails"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "sender": "={{ $json.body.Sender }}",
            "recipient": "={{ $json.body.Recipient }}",
            "date": "={{ $json.body.Date }}",
            "from": "={{ $json.body.From }}",
            "subject": "={{ $json.body.Subject }}",
            "headers": "={{ $json.body.Headers }}",
            "html-part": "={{ $json.body[\"Html-part\"] }}",
            "spamassassinScore": "={{ $json.body.SpamAssassinScore }}",
            "customid": "={{ $json.body.CustomID }}",
            "text-part": "={{ $json.cleanedMessage }}",
            "id": "={{ $json.id + 1}}",
            "send_recieve": "recieve"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "sender",
              "displayName": "sender",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "recipient",
              "displayName": "recipient",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "from",
              "displayName": "from",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subject",
              "displayName": "subject",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers",
              "displayName": "headers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "text-part",
              "displayName": "text-part",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "html-part",
              "displayName": "html-part",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "spamassassinScore",
              "displayName": "spamassassinScore",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "customid",
              "displayName": "customid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "payload",
              "displayName": "payload",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "send_recieve",
              "displayName": "send_recieve",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "8d12149f-fd4d-4ef6-995e-55b2d887c274",
      "name": "Insert into Display_Items.Inbox_Emails",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2600,
        360
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "017e0d9d-4346-4c28-a82d-6bed2c0ee8b1",
              "name": "headers",
              "value": "={{ $('Is Microsoft').item.json.headers }}",
              "type": "object"
            },
            {
              "id": "221624b3-fe6d-4df1-b20b-3af0bb1a736e",
              "name": "body",
              "value": "={{ $('Is Microsoft').item.json.body }}",
              "type": "object"
            },
            {
              "id": "73de4ed4-f17f-4c39-b227-951efd22d070",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "number"
            },
            {
              "id": "e7ab8210-2c13-48ef-b038-2266c65e951b",
              "name": "cleanedMessage",
              "value": "={{ $('Clean All HTML').item.json.cleanedMessage }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "3cf64e58-8d65-4c9d-851e-08dcc89df7d3",
      "name": "Combine for insert",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2420,
        360
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Emails",
          "mode": "list",
          "cachedResultName": "Inbox_Emails"
        },
        "limit": 1,
        "sort": {
          "values": [
            {
              "column": "id",
              "direction": "DESC"
            }
          ]
        },
        "options": {}
      },
      "id": "eb71243d-b04e-4445-90f5-cb8fce146cdd",
      "name": "Select Last Email by ID1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2100,
        780
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get input data from the previous node\nconst inputData = items[0].json.body['Html-part'];\n\n// Check if the signature exists in the HTML\nconst signatureIndex = inputData.indexOf('<div id=\"Signature\">');\n\n// If signature exists, trim everything after it including the signature itself\nconst outputData = signatureIndex !== -1 ? inputData.substring(0, signatureIndex) : inputData;\n\n// Return the modified string in a new item\nreturn [{json: {modifiedHtmlPart: outputData}}];\n"
      },
      "id": "492c9e31-bea5-4733-8d1d-c644bac0519d",
      "name": "Remove Email Sig",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1800,
        360
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get input data from the previous node\nconst inputData = items[0].json.body['Html-part'];\n\n// Check if the signature exists in the HTML\nconst signatureIndex = inputData.indexOf('<span class=\"gmail_signature_prefix\">');\n\n// If signature exists, trim everything after it including the signature itself\nconst outputData = signatureIndex !== -1 ? inputData.substring(0, signatureIndex) : inputData;\n\n// Return the modified string in a new item\nreturn [{json: {modifiedHtmlPart: outputData}}];"
      },
      "id": "fbe16f87-9702-4e16-bd26-3323fd864388",
      "name": "Remove Email Sig1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1780,
        780
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get input data from the previous node\nconst inputData = items[0].json.modifiedHtmlPart;\n\n// Remove all script and style elements\nlet outputData = inputData.replace(/<script[^>]*>([\\S\\s]*?)<\\/script>/gmi, '');\noutputData = outputData.replace(/<style[^>]*>([\\S\\s]*?)<\\/style>/gmi, '');\n\n// Use regex to remove all remaining HTML tags from the string\noutputData = outputData.replace(/<[^>]+>/g, '');\n\n// Normalize whitespace and split by newlines, then filter out empty lines\nconst lines = outputData.split('\\n').map(line => line.trim()).filter(line => line !== '');\n\n// Join back with single space to form the cleaned message body\nconst cleanedMessage = lines.join(' ');\n\n// Return the cleaned message body in a new item\nreturn [{json: {cleanedMessage: cleanedMessage}}];\n"
      },
      "id": "49146bcd-804f-4ef2-8758-a315c4149acc",
      "name": "Clean All HTML",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2020,
        360
      ]
    },
    {
      "parameters": {
        "jsCode": "// Get input data from the previous node\nconst inputData = items[0].json.modifiedHtmlPart;\n\n// Remove all script and style elements\nlet outputData = inputData.replace(/<script[^>]*>([\\S\\s]*?)<\\/script>/gmi, '');\noutputData = outputData.replace(/<style[^>]*>([\\S\\s]*?)<\\/style>/gmi, '');\n\noutputData = outputData.replace(/<blockquote[^>]*>([\\S\\s]*?)<div dir=[^>]*>[^>]*/gmi, '');\n// Use regex to remove all remaining HTML tags from the string\noutputData = outputData.replace(/<[^>]+>/g, '');\n\n// Remove email quotation lines that might follow specific patterns\noutputData = outputData.replace(/On .* wrote:/g, '');\n\n\n// Normalize whitespace and split by newlines, then filter out empty lines\nconst lines = outputData.split('\\n').map(line => line.trim()).filter(line => line !== '');\n\n// Join back with single space to form the cleaned message body\nconst cleanedMessage = lines.join(' ');\n\n// Return the cleaned message body in a new item\nreturn [{json: {cleanedMessage: cleanedMessage}}];\n"
      },
      "id": "bad82ea8-ba69-4f76-9f63-3e85064ac95a",
      "name": "Clean All HTML1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1940,
        780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "546b83d3-23ae-454e-b599-cb7beff24043",
              "leftValue": "={{ $json.body.Headers[\"x-ms-publictraffictype\"] }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "61f8f81f-2d48-4db9-8da8-e7429a06548e",
      "name": "Is Microsoft",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1620,
        520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "18f1c920-f725-48b8-8f59-e03eb1fff258",
              "leftValue": "={{ $json.body.Headers[\"X-Google-DKIM-Signatur\"] }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fe5863b0-bda9-4a95-b567-df1593d8b59b",
      "name": "Is Google",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1600,
        860
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "017e0d9d-4346-4c28-a82d-6bed2c0ee8b1",
              "name": "headers",
              "value": "={{ $('Is Google').item.json.headers }}",
              "type": "object"
            },
            {
              "id": "221624b3-fe6d-4df1-b20b-3af0bb1a736e",
              "name": "body",
              "value": "={{ $('Is Google').item.json.body }}",
              "type": "object"
            },
            {
              "id": "73de4ed4-f17f-4c39-b227-951efd22d070",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "number"
            },
            {
              "id": "e7ab8210-2c13-48ef-b038-2266c65e951b",
              "name": "cleanedMessage",
              "value": "={{ $('Clean All HTML1').item.json.cleanedMessage }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "00bc08e9-f08b-4f65-8dbe-8c6e26d9fde4",
      "name": "Combine for insert1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        2280,
        780
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    c.id AS contact_id, \n    c.contact_name, \n    c.first_name, \n    c.last_name\nFROM \n    display_items.\"CRM_Contacts\" c\nJOIN \n    relations.\"REL_ContactEmails\" r ON c.id = r.contact_id\nJOIN \n    display_items.\"CRM_Contact_Emails\" e ON r.email_id = e.id\nWHERE \n    e.email_address = '{{ $input.item.json.sender }}';\n",
        "options": {}
      },
      "id": "5f770053-5193-4616-899b-ba1cbaa8ac80",
      "name": "Find Contact who sent email",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3060,
        160
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "relations",
          "mode": "list",
          "cachedResultName": "relations"
        },
        "table": {
          "__rl": true,
          "value": "REL_EmailContact",
          "mode": "list",
          "cachedResultName": "REL_EmailContact"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "contact_id": "={{ $('Find Contact who sent email').item.json.contact_id }}",
            "email_id": "={{ $('Insert into Display_Items.Inbox_Emails').item.json.id }}",
            "id": "={{ $('Insert into Display_Items.Inbox_Emails').item.json.id  + '.' + $('Find Contact who sent email').item.json.contact_id}}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "email_id",
              "displayName": "email_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "f07b79e7-9fac-4afe-b915-e938e1b78e29",
      "name": "Create REL Record | Email -> Contact",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3260,
        160
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Tickets",
          "mode": "name"
        },
        "limit": 1,
        "sort": {
          "values": [
            {
              "column": "id",
              "direction": "DESC"
            }
          ]
        },
        "options": {}
      },
      "id": "115b5be6-83cf-4030-8d79-d1d4eee325fd",
      "name": "Get Last TIcket ID",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3460,
        160
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cbc8b31b-5e1b-472a-94c6-d0e6e54eab44",
              "name": "id",
              "value": "={{ $json.id + 1}}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "78b66b6a-c123-4bbc-b003-76ef83b751bc",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3680,
        160
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "9fe361ee-74ce-4319-aaee-fc3726109867",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2860,
        -80
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Emails",
          "mode": "name"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "id",
              "value": "={{ $json.id + 1 }}"
            },
            {
              "column": "sender",
              "value": "={{ $json.body.Sender }}"
            },
            {
              "column": "recipient",
              "value": "={{ $json.body.Recipient }}"
            },
            {
              "column": "recipient",
              "value": "={{ $json.body.Recipient }}"
            },
            {
              "column": "date",
              "value": "={{ $json.body.Date }}"
            },
            {
              "column": "from",
              "value": "={{ $json.body.Sender }}"
            },
            {
              "column": "subject",
              "value": "={{ $json.body.Subject }}"
            },
            {
              "column": "headers",
              "value": "={{ $json.body.Headers }}"
            },
            {
              "column": "text-part",
              "value": "={{ $json.cleanedMessage }}"
            },
            {
              "column": "html-part",
              "value": "={{ $json.body[\"Html-part\"] }}"
            },
            {
              "column": "spamassassinScore",
              "value": "={{ $json.body.SpamAssassinScore }}"
            },
            {
              "column": "customid"
            }
          ]
        },
        "options": {}
      },
      "id": "a6f3b27e-ef86-4f7f-82b5-4d4cdb7d3c74",
      "name": "Postgres2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2600,
        -40
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    c.id AS contact_id, \n    c.contact_name, \n    c.first_name, \n    c.last_name\nFROM \n    display_items.\"CRM_Contacts\" c\nJOIN \n    relations.\"REL_ContactEmails\" r ON c.id = r.contact_id\nJOIN \n    display_items.\"CRM_Contact_Emails\" e ON r.email_id = e.id\nWHERE \n    e.email_address = '{{ $input.item.json.sender }}';\n",
        "options": {}
      },
      "id": "08361dd3-b005-47b5-93d4-ce5d74e7ad34",
      "name": "Find Contact who sent email1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3040,
        380
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "relations",
          "mode": "list",
          "cachedResultName": "relations"
        },
        "table": {
          "__rl": true,
          "value": "REL_EmailContact",
          "mode": "list",
          "cachedResultName": "REL_EmailContact"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "contact_id": "={{ $('Find Contact who sent email1').item.json.contact_id }}",
            "email_id": "={{ $('Insert into Display_Items.Inbox_Emails').item.json.id }}",
            "id": "={{ $('Insert into Display_Items.Inbox_Emails').item.json.id  + '.' + $('Find Contact who sent email1').item.json.contact_id}}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "email_id",
              "displayName": "email_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "28bb44d2-d4b5-4bef-809f-3401d1c06b56",
      "name": "Create REL Record | Email -> Contact1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3240,
        380
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Emails",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Switch').item.json.id }}",
            "customid": "={{ $json.id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "sender",
              "displayName": "sender",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "recipient",
              "displayName": "recipient",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "from",
              "displayName": "from",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subject",
              "displayName": "subject",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers",
              "displayName": "headers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "text-part",
              "displayName": "text-part",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "html-part",
              "displayName": "html-part",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "spamassassinScore",
              "displayName": "spamassassinScore",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "customid",
              "displayName": "customid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "payload",
              "displayName": "payload",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "21cbdafc-eb39-4a1c-9a82-af4966ac127f",
      "name": "Update Email Table with customId",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3880,
        160
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "content": "I think after this step gets done, we should send out an email to init the email thread on mailjet.\n\nthis email should be a conformation that a ticket as been created, and inform the user that the following responses from us will come to that thread",
        "height": 197.42372881355934,
        "width": 282.1016949152542,
        "color": 3
      },
      "id": "10d8ef62-929a-4e05-b66b-88846a9f93f9",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5460,
        140
      ]
    },
    {
      "parameters": {
        "fromEmail": "noreply@aelieve.app",
        "toEmail": "={{ $json.body.Sender }}",
        "subject": "Aelieve Ticket Rejected",
        "text": "=The ticket:  {{ $json.body.Subject }}, has been rejected by our email system. \n\nPlease email: andrew@aelieve.it if you believe this is an error",
        "additionalFields": {}
      },
      "id": "f11c16a9-db15-47f8-abc5-3cd0a585cfbe",
      "name": "Error Email",
      "type": "n8n-nodes-base.mailjet",
      "typeVersion": 1,
      "position": [
        1780,
        940
      ],
      "credentials": {
        "mailjetEmailApi": {
          "id": "FK9kSrYM2H7nhvWb",
          "name": "Mailjet Email account"
        }
      }
    },
    {
      "parameters": {
        "subject": "Ticket: ",
        "additionalFields": {},
        "variablesUi": {
          "variablesValues": [
            {
              "name": "CustomId"
            }
          ]
        }
      },
      "id": "d870077f-f356-495d-83b7-f71c4e0aece3",
      "name": "Mailjet",
      "type": "n8n-nodes-base.mailjet",
      "typeVersion": 1,
      "position": [
        5280,
        180
      ],
      "credentials": {
        "mailjetEmailApi": {
          "id": "FK9kSrYM2H7nhvWb",
          "name": "Mailjet Email account"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Emails",
          "mode": "list",
          "cachedResultName": "Inbox_Emails"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "sender": "={{ $json.body.Sender }}",
            "recipient": "={{ $json.body.Recipient }}",
            "date": "={{ $json.body.Date }}",
            "from": "={{ $json.body.From }}",
            "subject": "={{ $json.body.Subject }}",
            "headers": "={{ $json.body.Headers }}",
            "html-part": "={{ $json.body[\"Html-part\"] }}",
            "spamassassinScore": "={{ $json.body.SpamAssassinScore }}",
            "customid": "={{ $json.body.CustomID }}",
            "text-part": "={{ $json.cleanedMessage }}",
            "id": "={{ $json.id + 1}}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "sender",
              "displayName": "sender",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "recipient",
              "displayName": "recipient",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "from",
              "displayName": "from",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subject",
              "displayName": "subject",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers",
              "displayName": "headers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "text-part",
              "displayName": "text-part",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "html-part",
              "displayName": "html-part",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "spamassassinScore",
              "displayName": "spamassassinScore",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "customid",
              "displayName": "customid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "payload",
              "displayName": "payload",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "9041837c-a1e2-4fe7-beed-ee94ea250f73",
      "name": "Insert into Display_Items.Inbox_Emails1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2500,
        780
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    c.id AS contact_id, \n    c.contact_name, \n    c.first_name, \n    c.last_name\nFROM \n    display_items.\"CRM_Contacts\" c\nJOIN \n    relations.\"REL_ContactEmails\" r ON c.id = r.contact_id\nJOIN \n    display_items.\"CRM_Contact_Emails\" e ON r.email_id = e.id\nWHERE \n    e.email_address = '{{ $input.item.json.sender }}';\n",
        "options": {}
      },
      "id": "80a9d235-08d0-4a31-a095-264fe7ea6dd0",
      "name": "Find Contact who sent email2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3040,
        580
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "relations",
          "mode": "list",
          "cachedResultName": "relations"
        },
        "table": {
          "__rl": true,
          "value": "REL_EmailContact",
          "mode": "list",
          "cachedResultName": "REL_EmailContact"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "contact_id": "={{ $('Find Contact who sent email2').item.json.contact_id }}",
            "email_id": "={{ $('Insert into Display_Items.Inbox_Emails1').item.json.id }}",
            "id": "={{ $('Insert into Display_Items.Inbox_Emails1').item.json.id  + '.' + $('Find Contact who sent email2').item.json.contact_id}}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "email_id",
              "displayName": "email_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "39b3425c-b789-4b57-af3e-e55cf3787233",
      "name": "Create REL Record | Email -> Contact2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3240,
        580
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Tickets",
          "mode": "name"
        },
        "limit": 1,
        "sort": {
          "values": [
            {
              "column": "id",
              "direction": "DESC"
            }
          ]
        },
        "options": {}
      },
      "id": "f9d7a8a9-df26-4ad8-abb6-61b4402e32a6",
      "name": "Get Last TIcket ID1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3440,
        580
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cbc8b31b-5e1b-472a-94c6-d0e6e54eab44",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "07b03516-1558-4ef2-9084-97a3d686d6f1",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3660,
        580
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    c.id AS contact_id, \n    c.contact_name, \n    c.first_name, \n    c.last_name\nFROM \n    display_items.\"CRM_Contacts\" c\nJOIN \n    relations.\"REL_ContactEmails\" r ON c.id = r.contact_id\nJOIN \n    display_items.\"CRM_Contact_Emails\" e ON r.email_id = e.id\nWHERE \n    e.email_address = '{{ $input.item.json.sender }}';\n",
        "options": {}
      },
      "id": "aa6c191e-4898-437f-8ed2-6db4e7886703",
      "name": "Find Contact who sent email3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3020,
        800
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "relations",
          "mode": "list",
          "cachedResultName": "relations"
        },
        "table": {
          "__rl": true,
          "value": "REL_EmailContact",
          "mode": "list",
          "cachedResultName": "REL_EmailContact"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "contact_id": "={{ $('Find Contact who sent email3').item.json.contact_id }}",
            "email_id": "={{ $('Insert into Display_Items.Inbox_Emails1').item.json.id }}",
            "id": "={{ $('Insert into Display_Items.Inbox_Emails1').item.json.id  + '.' + $('Find Contact who sent email3').item.json.contact_id}}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "email_id",
              "displayName": "email_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "contact_id",
              "displayName": "contact_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "cc091250-5b7d-4f97-a141-d9dddc330449",
      "name": "Create REL Record | Email -> Contact3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3220,
        800
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Emails",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Switch1').item.json.id }}",
            "customid": "={{ $json.id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "sender",
              "displayName": "sender",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "recipient",
              "displayName": "recipient",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "date",
              "displayName": "date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "from",
              "displayName": "from",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subject",
              "displayName": "subject",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "headers",
              "displayName": "headers",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "text-part",
              "displayName": "text-part",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "html-part",
              "displayName": "html-part",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "spamassassinScore",
              "displayName": "spamassassinScore",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "customid",
              "displayName": "customid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "payload",
              "displayName": "payload",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "bcbeed67-dd4d-429c-9c4e-c68a95ac0979",
      "name": "Update Email Table with customId1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3880,
        580
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Insert into Display_Items.Inbox_Emails1').item.json.customid }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "No CustomId"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "0592437b-4ce8-4ee7-aa1b-7c4ec8b3f8ea",
                    "leftValue": "={{ $('Insert into Display_Items.Inbox_Emails1').item.json.customid }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CustomId"
            }
          ]
        },
        "options": {}
      },
      "id": "777c6504-7f61-4e0f-9def-9780d72c5728",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        2740,
        780
      ]
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Tickets",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Switch').id }}",
            "created_at": "={{ $('Switch').headers.Date }}",
            "last_message_received_date": "={{ $now }}",
            "last_activity_date": "={{ $now }}",
            "ticket_status": "new",
            "reference_to_email_thread": "={{ $('Switch').customid }}",
            "ticket_name": "={{ $('Switch').subject }}",
            "ticket_description": "={{ $('Switch')['text-part'] }}",
            "inbox_id": 0,
            "primary_company_id": 0
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "add_recipients",
              "displayName": "add_recipients",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "inbox_id",
              "displayName": "inbox_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_message_received_date",
              "displayName": "last_message_received_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_response_date",
              "displayName": "last_response_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_activity_date",
              "displayName": "last_activity_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_contacted_date",
              "displayName": "last_contacted_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "latest_message_seen_by_agent_ids",
              "displayName": "latest_message_seen_by_agent_ids",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "ticket_status",
              "displayName": "ticket_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "primary_company_id",
              "displayName": "primary_company_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "priority",
              "displayName": "priority",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "user_ids_of_all_owners",
              "displayName": "user_ids_of_all_owners",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_customer_reply_date",
              "displayName": "last_customer_reply_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "reference_to_email_thread",
              "displayName": "reference_to_email_thread",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_contacted_ticket_note",
              "displayName": "last_contacted_ticket_note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_activity_date_ticket_note",
              "displayName": "last_activity_date_ticket_note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "all_owner_ids",
              "displayName": "all_owner_ids",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "ticket_name",
              "displayName": "ticket_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "ticket_description",
              "displayName": "ticket_description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            }
          ]
        },
        "options": {}
      },
      "id": "bb54a6a5-eb4a-45ad-9f92-819bfe3f9da9",
      "name": "Update Tickets Table",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3680,
        380
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Tickets",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $json.id }}",
            "created_at": "={{ $json.headers.Date }}",
            "last_message_received_date": "={{ $now }}",
            "last_activity_date": "={{ $now }}",
            "ticket_status": "new",
            "reference_to_email_thread": "={{ $json.customid }}",
            "ticket_name": "={{ $json.subject }}",
            "ticket_description": "={{ $json['text-part'] }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "add_recipients",
              "displayName": "add_recipients",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "inbox_id",
              "displayName": "inbox_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_message_received_date",
              "displayName": "last_message_received_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_response_date",
              "displayName": "last_response_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_activity_date",
              "displayName": "last_activity_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_contacted_date",
              "displayName": "last_contacted_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "latest_message_seen_by_agent_ids",
              "displayName": "latest_message_seen_by_agent_ids",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "ticket_status",
              "displayName": "ticket_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "primary_company_id",
              "displayName": "primary_company_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "priority",
              "displayName": "priority",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "user_ids_of_all_owners",
              "displayName": "user_ids_of_all_owners",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_customer_reply_date",
              "displayName": "last_customer_reply_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "reference_to_email_thread",
              "displayName": "reference_to_email_thread",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_contacted_ticket_note",
              "displayName": "last_contacted_ticket_note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_activity_date_ticket_note",
              "displayName": "last_activity_date_ticket_note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "all_owner_ids",
              "displayName": "all_owner_ids",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "ticket_name",
              "displayName": "ticket_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "ticket_description",
              "displayName": "ticket_description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            }
          ]
        },
        "options": {}
      },
      "id": "c6514f0d-ffaa-4c4b-ad7c-e055ca6029f5",
      "name": "Update Tickets Table with New ID1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3920,
        800
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Tickets",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Switch1').id }}",
            "created_at": "={{ $('Switch1').headers.Date }}",
            "last_message_received_date": "={{ $now }}",
            "last_activity_date": "={{ $now }}",
            "ticket_status": "new",
            "reference_to_email_thread": "={{ $('Switch1').customid }}",
            "ticket_name": "={{ $('Switch1').subject }}",
            "ticket_description": "={{ $('Switch1')['text-part'] }}",
            "inbox_id": 0,
            "primary_company_id": 0
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "add_recipients",
              "displayName": "add_recipients",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "inbox_id",
              "displayName": "inbox_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_message_received_date",
              "displayName": "last_message_received_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_response_date",
              "displayName": "last_response_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_activity_date",
              "displayName": "last_activity_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_contacted_date",
              "displayName": "last_contacted_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "latest_message_seen_by_agent_ids",
              "displayName": "latest_message_seen_by_agent_ids",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "ticket_status",
              "displayName": "ticket_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "primary_company_id",
              "displayName": "primary_company_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "priority",
              "displayName": "priority",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "user_ids_of_all_owners",
              "displayName": "user_ids_of_all_owners",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_customer_reply_date",
              "displayName": "last_customer_reply_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "reference_to_email_thread",
              "displayName": "reference_to_email_thread",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_contacted_ticket_note",
              "displayName": "last_contacted_ticket_note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_activity_date_ticket_note",
              "displayName": "last_activity_date_ticket_note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "all_owner_ids",
              "displayName": "all_owner_ids",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "ticket_name",
              "displayName": "ticket_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "ticket_description",
              "displayName": "ticket_description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            }
          ]
        },
        "options": {}
      },
      "id": "93262b2b-e0b0-4f13-8777-94bd7ffa4ba6",
      "name": "Update Tickets Table1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3440,
        800
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "bcb663d4-e120-4d7b-98a1-d0f8946fc4bb",
              "leftValue": "={{ $json.id }}",
              "rightValue": "={{ $('Edit Fields').item.json.id }}",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7a975a66-1c61-4a41-9f18-0b922388ac85",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4340,
        160
      ]
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Tickets",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Edit Fields').item.json.id + 1}}",
            "inbox_id": 0,
            "primary_company_id": "={{ $json.organization_id }}",
            "created_at": "={{ $now }}",
            "last_message_received_date": "={{ $now }}",
            "ticket_status": "new",
            "last_activity_date": "={{ $now }}",
            "ticket_name": "={{ $('Combine for insert').item.json.body.Subject }}",
            "ticket_description": "={{ $('Combine for insert').item.json.cleanedMessage }}",
            "reference_to_email_thread": "={{ $('Edit Fields').item.json.id + 1 }}",
            "add_recipients": "={{ $('Update Email Table with customId').item.json.sender }}",
            "user_ids_of_all_owners": "={{ $json.user_id }}",
            "all_owner_ids": "={{ $json.user_id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "add_recipients",
              "displayName": "add_recipients",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "inbox_id",
              "displayName": "inbox_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_message_received_date",
              "displayName": "last_message_received_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_response_date",
              "displayName": "last_response_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_activity_date",
              "displayName": "last_activity_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_contacted_date",
              "displayName": "last_contacted_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "latest_message_seen_by_agent_ids",
              "displayName": "latest_message_seen_by_agent_ids",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ticket_status",
              "displayName": "ticket_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "primary_company_id",
              "displayName": "primary_company_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "priority",
              "displayName": "priority",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "user_ids_of_all_owners",
              "displayName": "user_ids_of_all_owners",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_customer_reply_date",
              "displayName": "last_customer_reply_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "reference_to_email_thread",
              "displayName": "reference_to_email_thread",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_contacted_ticket_note",
              "displayName": "last_contacted_ticket_note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_activity_date_ticket_note",
              "displayName": "last_activity_date_ticket_note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "all_owner_ids",
              "displayName": "all_owner_ids",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ticket_name",
              "displayName": "ticket_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ticket_description",
              "displayName": "ticket_description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "1729a353-238b-4f94-95e6-934fba079441",
      "name": "Create New Ticket",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        5060,
        180
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n    c.id AS contact_id,\n    roc.org_id AS organization_id,\n    ruo.user_id AS user_id\nFROM\n    display_items.\"CRM_Contacts\" AS c\nINNER JOIN\n    relations.\"REL_ContactEmails\" AS rce ON c.id = rce.contact_id\nINNER JOIN\n    display_items.\"CRM_Contact_Emails\" AS ce ON rce.email_id = ce.id\nLEFT JOIN\n    relations.\"REL_OrgContacts\" AS roc ON c.id = roc.contact_id\nLEFT JOIN\n    relations.\"REL_UsersOrgs\" AS ruo ON roc.org_id = ruo.org_id\nWHERE\n    ce.email_address = '{{ $('Update Email Table with customId').item.json.sender }}'; -- Replace 'provided_email@example.com' with the actual email address\n",
        "options": {}
      },
      "id": "7ab45803-c944-4409-93bb-e1c6fc2b0d11",
      "name": "Get, ContactID, OrgID and main_account_manager and userid of account manager",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        4720,
        260
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "content": "Notify account manager of new message here\n",
        "height": 80
      },
      "id": "3162add1-63ad-4bbb-adcd-7c63ae48aa0f",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3960,
        1000
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Tickets",
          "mode": "name"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "id",
              "value": "={{ $json.customid }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7cdff99c-e725-4c18-b1c3-6fd5a6264635",
      "name": "Check if Ticket is already in system",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        4120,
        160
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Tickets",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $json.id }}",
            "created_at": "={{ $json.headers.Date }}",
            "last_message_received_date": "={{ $now }}",
            "last_activity_date": "={{ $now }}",
            "ticket_status": "new",
            "reference_to_email_thread": "={{ $json.customid }}",
            "ticket_name": "={{ $json.subject }}",
            "ticket_description": "={{ $json['text-part'] }}",
            "inbox_id": 0,
            "primary_company_id": 0
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "add_recipients",
              "displayName": "add_recipients",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "inbox_id",
              "displayName": "inbox_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_message_received_date",
              "displayName": "last_message_received_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_response_date",
              "displayName": "last_response_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_activity_date",
              "displayName": "last_activity_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_contacted_date",
              "displayName": "last_contacted_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "latest_message_seen_by_agent_ids",
              "displayName": "latest_message_seen_by_agent_ids",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "ticket_status",
              "displayName": "ticket_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "primary_company_id",
              "displayName": "primary_company_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "priority",
              "displayName": "priority",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "user_ids_of_all_owners",
              "displayName": "user_ids_of_all_owners",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_customer_reply_date",
              "displayName": "last_customer_reply_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "reference_to_email_thread",
              "displayName": "reference_to_email_thread",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_contacted_ticket_note",
              "displayName": "last_contacted_ticket_note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_activity_date_ticket_note",
              "displayName": "last_activity_date_ticket_note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "all_owner_ids",
              "displayName": "all_owner_ids",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "ticket_name",
              "displayName": "ticket_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "ticket_description",
              "displayName": "ticket_description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            }
          ]
        },
        "options": {}
      },
      "id": "f3066787-38de-4611-aa98-c76b15c09248",
      "name": "Update Tickets Table2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        4620,
        -20
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "content": "Notify account manager of new message here\n",
        "height": 80
      },
      "id": "c37e2477-f099-4824-a621-a6ad9e226410",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4780,
        -40
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Insert into Display_Items.Inbox_Emails').item.json.customid }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "No CustomId"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "0592437b-4ce8-4ee7-aa1b-7c4ec8b3f8ea",
                    "leftValue": "={{ $('Insert into Display_Items.Inbox_Emails').item.json.customid }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CustomId"
            }
          ]
        },
        "options": {}
      },
      "id": "2a0ad0ae-5cd6-4fa0-b8c2-7b5045fb6536",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        2800,
        360
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n    c.id AS contact_id,\n    roc.org_id AS organization_id,\n    ruo.user_id AS user_id\nFROM\n    display_items.\"CRM_Contacts\" AS c\nINNER JOIN\n    relations.\"REL_ContactEmails\" AS rce ON c.id = rce.contact_id\nINNER JOIN\n    display_items.\"CRM_Contact_Emails\" AS ce ON rce.email_id = ce.id\nLEFT JOIN\n    relations.\"REL_OrgContacts\" AS roc ON c.id = roc.contact_id\nLEFT JOIN\n    relations.\"REL_UsersOrgs\" AS ruo ON roc.org_id = ruo.org_id\nWHERE\n    ce.email_address = '{{ $('Update Email Table with customId').item.json.sender }}'; -- Replace 'provided_email@example.com' with the actual email address\n",
        "options": {}
      },
      "id": "5e22959f-b23c-4d8a-8ed0-9cd8ced72cf2",
      "name": "Get, ContactID, OrgID and main_account_manager and userid of account manager1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3460,
        380
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "content": "This 'IF' is probs not needed",
        "height": 80,
        "width": 230.2364729458918
      },
      "id": "eb3d53aa-eb5a-4c6e-bf10-7a8ffdbe779b",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4280,
        120
      ]
    },
    {
      "parameters": {
        "content": "Notify account manager of new message here\n",
        "height": 80,
        "width": 231.63126252505012
      },
      "id": "fde668f9-a2b4-406a-9cc0-501ec725ba22",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3840,
        400
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n    c.id AS contact_id,\n    roc.org_id AS organization_id,\n    ruo.user_id AS user_id\nFROM\n    display_items.\"CRM_Contacts\" AS c\nINNER JOIN\n    relations.\"REL_ContactEmails\" AS rce ON c.id = rce.contact_id\nINNER JOIN\n    display_items.\"CRM_Contact_Emails\" AS ce ON rce.email_id = ce.id\nLEFT JOIN\n    relations.\"REL_OrgContacts\" AS roc ON c.id = roc.contact_id\nLEFT JOIN\n    relations.\"REL_UsersOrgs\" AS ruo ON roc.org_id = ruo.org_id\nWHERE\n    ce.email_address = '{{ $('Update Email Table with customId').item.json.sender }}'; -- Replace 'provided_email@example.com' with the actual email address\n",
        "options": {}
      },
      "id": "29a3bf71-d491-44b4-b52b-059ff4e66f82",
      "name": "Get, ContactID, OrgID and main_account_manager and userid of account manager2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3640,
        960
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "bcb663d4-e120-4d7b-98a1-d0f8946fc4bb",
              "leftValue": "={{ $json.id }}",
              "rightValue": "={{ $('Edit Fields').item.json.id }}",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "94f0ad12-59c4-476d-ac87-5676a31015c4",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4140,
        580
      ]
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Tickets",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Edit Fields').item.json.id + 1}}",
            "inbox_id": 0,
            "primary_company_id": "={{ $json.organization_id }}",
            "created_at": "={{ $now }}",
            "last_message_received_date": "={{ $now }}",
            "ticket_status": "new",
            "last_activity_date": "={{ $now }}",
            "ticket_name": "={{ $('Combine for insert').item.json.body.Subject }}",
            "ticket_description": "={{ $('Combine for insert').item.json.cleanedMessage }}",
            "reference_to_email_thread": "={{ $('Edit Fields').item.json.id + 1 }}",
            "add_recipients": "={{ $('Update Email Table with customId').item.json.sender }}",
            "user_ids_of_all_owners": "={{ $json.user_id }}",
            "all_owner_ids": "={{ $json.user_id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "add_recipients",
              "displayName": "add_recipients",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "inbox_id",
              "displayName": "inbox_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_message_received_date",
              "displayName": "last_message_received_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_response_date",
              "displayName": "last_response_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_activity_date",
              "displayName": "last_activity_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_contacted_date",
              "displayName": "last_contacted_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "latest_message_seen_by_agent_ids",
              "displayName": "latest_message_seen_by_agent_ids",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ticket_status",
              "displayName": "ticket_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "primary_company_id",
              "displayName": "primary_company_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "priority",
              "displayName": "priority",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "user_ids_of_all_owners",
              "displayName": "user_ids_of_all_owners",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_customer_reply_date",
              "displayName": "last_customer_reply_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "reference_to_email_thread",
              "displayName": "reference_to_email_thread",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_contacted_ticket_note",
              "displayName": "last_contacted_ticket_note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "last_activity_date_ticket_note",
              "displayName": "last_activity_date_ticket_note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "all_owner_ids",
              "displayName": "all_owner_ids",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ticket_name",
              "displayName": "ticket_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ticket_description",
              "displayName": "ticket_description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "e725d133-fbdc-49a3-82ac-77ba990744db",
      "name": "Create New Ticket1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        4680,
        720
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n    c.id AS contact_id,\n    roc.org_id AS organization_id,\n    ruo.user_id AS user_id\nFROM\n    display_items.\"CRM_Contacts\" AS c\nINNER JOIN\n    relations.\"REL_ContactEmails\" AS rce ON c.id = rce.contact_id\nINNER JOIN\n    display_items.\"CRM_Contact_Emails\" AS ce ON rce.email_id = ce.id\nLEFT JOIN\n    relations.\"REL_OrgContacts\" AS roc ON c.id = roc.contact_id\nLEFT JOIN\n    relations.\"REL_UsersOrgs\" AS ruo ON roc.org_id = ruo.org_id\nWHERE\n    ce.email_address = '{{ $('Update Email Table with customId').item.json.sender }}'; -- Replace 'provided_email@example.com' with the actual email address\n",
        "options": {}
      },
      "id": "a68ea095-e7b4-4f37-9dcd-facb2a0dd688",
      "name": "Get, ContactID, OrgID and main_account_manager and userid of account manager3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        4420,
        700
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "value": "display_items",
          "mode": "list",
          "cachedResultName": "display_items"
        },
        "table": {
          "__rl": true,
          "value": "Inbox_Tickets",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $json.id }}",
            "created_at": "={{ $json.headers.Date }}",
            "last_message_received_date": "={{ $now }}",
            "last_activity_date": "={{ $now }}",
            "ticket_status": "new",
            "reference_to_email_thread": "={{ $json.customid }}",
            "ticket_name": "={{ $json.subject }}",
            "ticket_description": "={{ $json['text-part'] }}",
            "inbox_id": 0,
            "primary_company_id": 0
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "add_recipients",
              "displayName": "add_recipients",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "inbox_id",
              "displayName": "inbox_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_message_received_date",
              "displayName": "last_message_received_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_response_date",
              "displayName": "last_response_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_activity_date",
              "displayName": "last_activity_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_contacted_date",
              "displayName": "last_contacted_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "latest_message_seen_by_agent_ids",
              "displayName": "latest_message_seen_by_agent_ids",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "ticket_status",
              "displayName": "ticket_status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "primary_company_id",
              "displayName": "primary_company_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": false
            },
            {
              "id": "priority",
              "displayName": "priority",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "user_ids_of_all_owners",
              "displayName": "user_ids_of_all_owners",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_customer_reply_date",
              "displayName": "last_customer_reply_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "reference_to_email_thread",
              "displayName": "reference_to_email_thread",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_contacted_ticket_note",
              "displayName": "last_contacted_ticket_note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "last_activity_date_ticket_note",
              "displayName": "last_activity_date_ticket_note",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            },
            {
              "id": "all_owner_ids",
              "displayName": "all_owner_ids",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "ticket_name",
              "displayName": "ticket_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "ticket_description",
              "displayName": "ticket_description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            }
          ]
        },
        "options": {}
      },
      "id": "0cb1e557-8bc0-418f-ae8e-cd0bab8881ee",
      "name": "Update Tickets Table3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        4440,
        520
      ],
      "credentials": {
        "postgres": {
          "id": "GsrLrefashmMjsw3",
          "name": "Aelieve PROD"
        }
      }
    },
    {
      "parameters": {
        "content": "Notify account manager of new message here\n",
        "height": 80
      },
      "id": "eefe37a1-b04b-4800-bdd0-7a8c335b061e",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4640,
        520
      ]
    },
    {
      "parameters": {
        "content": "This 'IF' is probs not needed",
        "height": 80,
        "width": 230.2364729458918
      },
      "id": "a49fc4e3-95eb-4f51-8a03-a91cd489b7ff",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4100,
        540
      ]
    },
    {
      "parameters": {
        "subject": "Ticket: ",
        "additionalFields": {},
        "variablesUi": {
          "variablesValues": [
            {
              "name": "CustomId"
            }
          ]
        }
      },
      "id": "4a46eaf3-743a-46e6-b5ab-46268431eb72",
      "name": "Mailjet1",
      "type": "n8n-nodes-base.mailjet",
      "typeVersion": 1,
      "position": [
        4940,
        740
      ],
      "credentials": {
        "mailjetEmailApi": {
          "id": "FK9kSrYM2H7nhvWb",
          "name": "Mailjet Email account"
        }
      }
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Is Microsoft",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select Last Email by ID": {
      "main": [
        [
          {
            "node": "Combine for insert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Email Sig": {
      "main": [
        [
          {
            "node": "Clean All HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Email Sig1": {
      "main": [
        [
          {
            "node": "Clean All HTML1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean All HTML": {
      "main": [
        [
          {
            "node": "Select Last Email by ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean All HTML1": {
      "main": [
        [
          {
            "node": "Select Last Email by ID1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Microsoft": {
      "main": [
        [
          {
            "node": "Remove Email Sig",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Is Google",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Google": {
      "main": [
        [
          {
            "node": "Remove Email Sig1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select Last Email by ID1": {
      "main": [
        [
          {
            "node": "Combine for insert1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Contact who sent email": {
      "main": [
        [
          {
            "node": "Create REL Record | Email -> Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Last TIcket ID": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create REL Record | Email -> Contact": {
      "main": [
        [
          {
            "node": "Get Last TIcket ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Update Email Table with customId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine for insert": {
      "main": [
        [
          {
            "node": "Insert into Display_Items.Inbox_Emails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert into Display_Items.Inbox_Emails": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Contact who sent email1": {
      "main": [
        [
          {
            "node": "Create REL Record | Email -> Contact1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create REL Record | Email -> Contact1": {
      "main": [
        [
          {
            "node": "Get, ContactID, OrgID and main_account_manager and userid of account manager1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Email Table with customId": {
      "main": [
        [
          {
            "node": "Check if Ticket is already in system",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert into Display_Items.Inbox_Emails1": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Contact who sent email2": {
      "main": [
        [
          {
            "node": "Create REL Record | Email -> Contact2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create REL Record | Email -> Contact2": {
      "main": [
        [
          {
            "node": "Get Last TIcket ID1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Last TIcket ID1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Update Email Table with customId1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Contact who sent email3": {
      "main": [
        [
          {
            "node": "Create REL Record | Email -> Contact3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create REL Record | Email -> Contact3": {
      "main": [
        [
          {
            "node": "Update Tickets Table1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Email Table with customId1": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine for insert1": {
      "main": [
        [
          {
            "node": "Insert into Display_Items.Inbox_Emails1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Find Contact who sent email2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Find Contact who sent email3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Update Tickets Table2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get, ContactID, OrgID and main_account_manager and userid of account manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Tickets Table": {
      "main": [
        []
      ]
    },
    "Get, ContactID, OrgID and main_account_manager and userid of account manager": {
      "main": [
        [
          {
            "node": "Create New Ticket",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Ticket is already in system": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Find Contact who sent email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Find Contact who sent email1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get, ContactID, OrgID and main_account_manager and userid of account manager1": {
      "main": [
        [
          {
            "node": "Update Tickets Table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Tickets Table1": {
      "main": [
        []
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Update Tickets Table3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get, ContactID, OrgID and main_account_manager and userid of account manager3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get, ContactID, OrgID and main_account_manager and userid of account manager3": {
      "main": [
        [
          {
            "node": "Create New Ticket1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Chicago",
    "saveManualExecutions": true,
    "callerPolicy": "any"
  },
  "triggerCount": 1,
  "versionId": "8060ad2e-1889-4d63-8ef2-7ab969a669f8",
  "owner": "andrew@aelieve.it"
}